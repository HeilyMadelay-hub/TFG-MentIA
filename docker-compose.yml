# Docker Compose principal - Orquesta todos los servicios
services:
  # ChromaDB Vector Database
  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: chromadb
    restart: unless-stopped
    ports:
      - "8050:8000"
    environment:
      - ALLOW_RESET=true
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_PORT=8000
      - CHROMA_TELEMETRY_ENABLED=false
    volumes:
      - chromadb_data:/chroma/chroma
    networks:
      - chabot-network

  # Backend FastAPI
  backend:
    build: ./back
    container_name: chabot-backend
    env_file:
      - ./back/.env
      - ./back/.env.docker
    environment:
      - DOCKER_ENV=true
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - CORS_ORIGINS=http://localhost,http://frontend,http://localhost:80
    volumes:
      - ./back/uploads:/app/uploads
      - ./back/logs:/app/logs
    ports:
      - "2690:8000"
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --ws websockets
    networks:
      - chabot-network
    depends_on:
      - chromadb

  # Frontend Flutter
  frontend:
    build: ./Front/frontend_flutter
    container_name: chabot-frontend
    ports:
      - "80:80"
    networks:
      - chabot-network
    depends_on:
      - backend

networks:
  chabot-network:
    driver: bridge

volumes:
  chromadb_data: